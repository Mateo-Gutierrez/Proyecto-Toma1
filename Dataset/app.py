import streamlit as st
import pandas as pd
import matplotlib.pyplot as plt
import numpy as np

# Configuraci√≥n de la p√°gina
st.set_page_config(
    page_title="Visualizaci√≥n de Datos Estudiantiles",
    page_icon="üéì",
    layout="wide",
)

# Cargar datos
@st.cache
def load_data():
    url = "https://raw.githubusercontent.com/Mateo-Gutierrez/Proyecto-Toma1/d3bb98b70dad9e7b2159634afb18c0e0476681e1/student-por.csv"
    return pd.read_csv(url, delimiter=";")

data = load_data()

st.title("üéì Dashboard de an√°lisis estudiantil")
st.markdown(
        """
        Este tablero interactivo presenta un an√°lisis del rendimiento estudiantil basado en datos de dos colegios de Portugal. 
        Los datos incluyen informaci√≥n demogr√°fica, social y acad√©mica, junto con las calificaciones finales de los estudiantes 
        en tres periodos acad√©micos.
        
        Consideraciones:
        - En Portugal, el sistema de calificaciones es de 0 a 20, sin decimales, y el m√≠nimo aprobatorio es 10
        - G1, G2, G3 corresponden a primer, segundo, tercer y √∫ltimo trimestre del a√±o, as√≠ como el periodo calificado respectivamente
        ---
        """
    )

# Sidebar para filtros
st.sidebar.title("üìä Filtros")
selected_school = st.sidebar.multiselect(
    "Selecciona el colegio", options=data["school"].unique(), default=data["school"].unique()
)
selected_sex = st.sidebar.multiselect(
    "Selecciona el sexo", options=data["sex"].unique(), default=data["sex"].unique()
)
selected_age_range = st.sidebar.slider(
    "Selecciona rango de edad", int(data["age"].min()), int(data["age"].max()), (15, 20)
)

# Texto aclaratorio
st.sidebar.markdown(
    """
    **Aclaraci√≥n:**
    El an√°lisis de datos (gr√°ficas, tablas, etc.) est√°n sujetos a los filtros; por lo que se omiten muy pocos datos.
    """
)

# Aplicar filtros
filtered_data = data[
    (data["school"].isin(selected_school)) &
    (data["sex"].isin(selected_sex)) &
    (data["age"].between(*selected_age_range))
]

# √çndice interactivo
secciones = [
    "üìò Informaci√≥n del Dataset",
    "üìà Estad√≠sticas Generales",
    "üìä Visualizaciones Interactivas",
    "üìâ Visualizaci√≥n de correlaci√≥n",
    "‚úÖ Resultados",
    "üßê Conclusiones"
]
# Estilizar el texto de la radio con Markdown
st.markdown(
    """
    <style>
    .big-font {
        font-size:48px !important;
        font-weight: bold;
        color: white;
    }
    </style>
    """,
    unsafe_allow_html=True
)
# Aplicar estilo al texto de la radio
st.markdown('<p class="big-font">Navega por las secciones:</p>', unsafe_allow_html=True)

# Radio con opciones
seleccion = st.radio("", secciones)

if seleccion == "üìò Informaci√≥n del Dataset":
    st.title("üìò Informaci√≥n del Dataset")
    st.markdown(
        """
        El conjunto de datos abarca caracter√≠sticas como:
        
        - **Atributos Demogr√°ficos:** Edad, sexo, tipo de direcci√≥n.
        - **Atributos Educativos:** Tiempo de estudio, fallos previos, apoyo escolar y familiar.
        - **Notas:** Calificaciones de los periodos acad√©micos (G1, G2 y G3).

        **Fuente de los datos:** [UCI Machine Learning Repository](https://archive.ics.uci.edu/dataset/320/student+performance)
        
        ---
        """
    )

elif seleccion == "üìà Estad√≠sticas Generales":
    st.header("üìà Estad√≠sticas Generales")
    st.markdown(
        """
        Este conjunto de datos incluye caracter√≠sticas como edad, g√©nero, tiempo de estudio, apoyo educativo, y notas de los estudiantes.
        """
    )
    
    # Expander para registros filtrados
    with st.expander("üìã Registros Filtrados y Estad√≠sticas Generales", expanded=False):
        st.write(f"**Total de registros filtrados:** {len(filtered_data)}")
        st.dataframe(filtered_data.describe())
    
    # Expander para descripciones de grupos
    with st.expander("üìò Descripci√≥n y An√°lisis Segmentado por Grupos", expanded=False):
        st.markdown(
            """
            <div style="text-align: center; font-size: 18px; font-weight: bold;">
                <p> <strong>Descripci√≥n de los Grupos:</strong></p>
            <div style="text-align: left; font-size: 18px; font-weight: bold;">
                <p><strong>G1:</strong> Nota obtenida en el primer periodo acad√©mico.</p>
                <p><strong>G2:</strong> Nota obtenida en el segundo periodo acad√©mico.</p>
                <p><strong>G3:</strong> Nota final obtenida al finalizar el a√±o.</p>
            </div>
            """,
            unsafe_allow_html=True
        )

        # Dividir en columnas para mostrar tablas lado a lado
        col1, col2, col3 = st.columns(3)

        # Tabla para G1
        with col1:
            st.subheader("Promedio G1 por Sexo y Edad")
            group_g1 = filtered_data.groupby(["sex", "age"])["G1"].mean().reset_index()
            st.dataframe(group_g1.style.format({"G1": "{:.2f}"}))

        # Tabla para G2
        with col2:
            st.subheader("Promedio G2 por Sexo y Edad")
            group_g2 = filtered_data.groupby(["sex", "age"])["G2"].mean().reset_index()
            st.dataframe(group_g2.style.format({"G2": "{:.2f}"}))

        # Tabla para G3
        with col3:
            st.subheader("Promedio G3 por Sexo y Edad")
            group_g3 = filtered_data.groupby(["sex", "age"])["G3"].mean().reset_index()
            st.dataframe(group_g3.style.format({"G3": "{:.2f}"}))

elif seleccion == "üìä Visualizaciones Interactivas":
    st.header("üìä Visualizaciones Interactivas")

    # Distribuci√≥n por colegio
    with st.expander("Distribuci√≥n de Estudiantes por Colegio", expanded=False):
        st.subheader("Distribuci√≥n de Estudiantes por Colegio")
        st.markdown(
            """
            Este gr√°fico muestra c√≥mo se distribuyen los estudiantes entre los dos colegios del dataset: 
            **Gabriel Pereira (GP)** y **Mousinho da Silveira (MS)**. 
            La visualizaci√≥n resalta la proporci√≥n de estudiantes en cada colegio, lo que puede ayudar a entender la composici√≥n del dataset.
            """
        )

        # Recuento de estudiantes por colegio
        school_counts = filtered_data["school"].value_counts()
        st.markdown(
            f"""
            **Recuento por Colegio:**
            - **Gabriel Pereira (GP):** {school_counts.get('GP', 0)} estudiantes
            - **Mousinho da Silveira (MS):** {school_counts.get('MS', 0)} estudiantes
            """
        )
        
        # Gr√°fico circular
        fig, ax = plt.subplots(figsize=(8, 6))
        ax.pie(
            school_counts,
            labels=school_counts.index,
            autopct="%1.1f%%",
            startangle=90,
            colors=["#FFD700", "#6495ED"]
        )
        ax.set_title("Distribuci√≥n de Estudiantes por Colegio", fontsize=14, color="navy")
        st.pyplot(fig)

    # Relaci√≥n entre sexo y notas
    with st.expander("Relaci√≥n entre Sexo y Nota Final (G3) por Colegio", expanded=False):
        st.subheader("Relaci√≥n entre Sexo y Nota Final (G3) por Colegio")
        st.markdown(
        """
        En esta gr√°fica se analiza c√≥mo las notas finales (G3) var√≠an seg√∫n el sexo del estudiante 
        (**Femenino** o **Masculino**) y su colegio. Esta comparaci√≥n permite identificar posibles diferencias 
        en el rendimiento acad√©mico por g√©nero en ambos colegios.
        """
    )

        # Gr√°fico de la relaci√≥n entre sexo y notas finales (G3) por colegio
        fig, ax = plt.subplots(figsize=(10, 6))
        grouped_data = filtered_data.groupby(["school", "sex"])["G3"].mean().unstack()
        grouped_data.plot(kind="bar", ax=ax, color=["#FF6347", "#4682B4"])
        ax.set_title("Relaci√≥n entre Sexo y Nota Final (G3) por Colegio", fontsize=14, color="navy")
        ax.set_xlabel("Colegio", fontsize=12)
        ax.set_ylabel("Nota Promedio (G3)", fontsize=12)
        st.pyplot(fig)

    # Nota final por edad y sexo
    with st.expander("Nota Final (G3) por Edad y Sexo", expanded=False):
        st.subheader("Nota Final (G3) por Edad y Sexo")
        st.markdown(
            """
            Este gr√°fico explora la relaci√≥n entre la edad de los estudiantes y sus notas finales (G3), 
            desglosada por sexo. Permite observar patrones de rendimiento acad√©mico a trav√©s de diferentes 
            grupos de edad, separados en categor√≠as de g√©nero.
            """
        )
        fig, ax = plt.subplots(figsize=(12, 6))
        age_sex_data = filtered_data.groupby(["age", "sex"])["G3"].mean().unstack()
        age_sex_data.plot(kind="bar", ax=ax, stacked=False, color=["#90EE90", "#FFB6C1"])
        ax.set_title("Nota Final (G3) por Edad y Sexo", fontsize=14, color="navy")
        ax.set_xlabel("Edad", fontsize=12)
        ax.set_ylabel("Nota Promedio (G3)", fontsize=12)
        st.pyplot(fig)
    with st.expander("Impacto de los recursos de apoyo escolar en las notas", expanded=False):
        # Impacto de apoyo escolar
        st.subheader("Impacto del Apoyo Escolar y Familiar")
        st.markdown("Esta secci√≥n analiza c√≥mo el apoyo escolar y familiar afecta las notas finales de los estudiantes (G3).")

        fig, ax = plt.subplots(figsize=(8, 6))
        schoolsup_data = filtered_data.groupby("schoolsup")["G3"].mean()
        ax.bar(schoolsup_data.index, schoolsup_data.values, color=["#d73027", "#4575b4"])
        ax.set_title("Impacto del Apoyo Escolar en la Nota Final (G3)", fontsize=14, color="navy")
        ax.set_xlabel("Apoyo Escolar (S√≠/No)", fontsize=12)
        ax.set_ylabel("Nota Promedio (G3)", fontsize=12)
        st.pyplot(fig)
        st.markdown("El gr√°fico muestra que los estudiantes sin apoyo escolar (schoolsup = no) tienen un rendimiento ligeramente superior en la nota final (G3) en comparaci√≥n con quienes reciben apoyo escolar, aunque las diferencias en los promedios son peque√±as y la mediana es m√°s alta para el grupo sin apoyo. Esto podr√≠a explicarse porque los estudiantes con apoyo escolar suelen requerir asistencia debido a dificultades acad√©micas previas, mientras que quienes no lo reciben podr√≠an tener una base acad√©mica m√°s s√≥lida y no necesitar este tipo de ayuda.")
        
        # Impacto del apoyo familiar
        fig, ax = plt.subplots(figsize=(8, 6))
        famsup_data = filtered_data.groupby("famsup")["G3"].mean()
        ax.bar(famsup_data.index, famsup_data.values, color=["#d73027", "#4575b4"])
        ax.set_title("Impacto del Apoyo Familiar en la Nota Final (G3)", fontsize=14, color="navy")
        ax.set_xlabel("Apoyo Familiar (S√≠/No)", fontsize=12)
        ax.set_ylabel("Nota Promedio (G3)", fontsize=12)
        st.pyplot(fig)

        st.markdown("Los estudiantes que reciben apoyo familiar (famsup = yes) presentan un rendimiento en G3 ligeramente superior al de aquellos que no lo reciben, aunque las diferencias en las notas finales entre ambos grupos son m√≠nimas. Esto sugiere que, si bien el apoyo familiar podr√≠a ser un factor motivador, su impacto en el rendimiento acad√©mico es limitado, y otros factores como los h√°bitos de estudio (studytime) o la asistencia (absences) podr√≠an tener una influencia m√°s significativa en las calificaciones.")

        # Comparaci√≥n con acceso a internet
        st.subheader("Impacto del Acceso a Internet")
        st.markdown(
            """
            Aqu√≠ se analiza c√≥mo el acceso a Internet afecta el rendimiento acad√©mico final. 

            """
        )
        # Crear el gr√°fico
        fig, ax = plt.subplots(figsize=(8, 6))

        # Dividir los datos en funci√≥n de la columna 'internet'
        categories = data['internet'].unique()  # Categor√≠as √∫nicas en la columna 'internet'
        data_to_plot = [data[data['internet'] == category]['G3'] for category in categories]

        # Crear boxplot
        ax.boxplot(data_to_plot, labels=categories)

        # Configurar t√≠tulos y etiquetas
        ax.set_title('Impacto del acceso a internet en la Nota final (G3)', fontsize=14)
        ax.set_xlabel('Acceso a Internet', fontsize=12)
        ax.set_ylabel('Nota final (G3)', fontsize=12)
        # Mostrar el gr√°fico en Streamlit
        st.pyplot(fig)
    
        st.markdown(
            """
            El acceso a internet por s√≠ solo no parece ser un factor determinante en el rendimiento acad√©mico (G3), ya que::
            
            - Tanto los estudiantes con acceso a internet ("yes") como aquellos sin acceso ("no") tienen una mediana de calificaciones finales (G3) muy parecida, alrededor de 12. Esto sugiere que, en promedio, el acceso a internet no tiene un impacto significativo en la nota final.
            - Los estudiantes con acceso a internet tienen una distribuci√≥n ligeramente m√°s compacta en las calificaciones (menos dispersi√≥n) en comparaci√≥n con los estudiantes sin acceso.
            """
        )
        # Acceso a internet (internet), las horas de estudio (studytime), y el apoyo escolar (schoolsup) est√°n relacionados.
        st.subheader("Impacto del Acceso a Internet, horas de estudio, y apoyo escolar")
        st.markdown(
            """
            El gr√°fico muestra c√≥mo el acceso a internet, las horas de estudio y el apoyo escolar est√°n relacionados. 

            """
        )
        # Crear gr√°fico combinado
        fig, ax = plt.subplots(figsize=(10, 6))

        # Agrupar datos y definir colores
        grouped_data = data.groupby(['internet', 'schoolsup'])['studytime']
        colors = {'yes': '#FF6347', 'no': '#4682B4'}
        positions = [1, 2, 4, 5]  # Posiciones de los boxplots
        labels = ['No Internet / No Apoyo', 'No Internet / Apoyo', 'Internet / No Apoyo', 'Internet / Apoyo']

        # Crear boxplots
        box_data = []
        for internet_value in ['no', 'yes']:
            for schoolsup_value in ['no', 'yes']:
                subset = data[
                    (data['internet'] == internet_value) & 
                    (data['schoolsup'] == schoolsup_value)
                ]['studytime']
                box_data.append(subset)

        # Dibujar el gr√°fico
        bp = ax.boxplot(box_data, positions=positions, patch_artist=True, widths=0.6)

        # Personalizar colores
        for patch, group in zip(bp['boxes'], [f'no_{k}' for k in colors] + [f'yes_{k}' for k in colors]):
            patch.set_facecolor(colors[group.split('_')[1]])

        # Configurar etiquetas y dise√±o
        ax.set_xticks(positions)
        ax.set_xticklabels(labels, rotation=45, ha="right")
        ax.set_title("Interacci√≥n entre Acceso a Internet, Horas de Estudio y Apoyo Escolar", fontsize=14)
        ax.set_xlabel("Categor√≠as", fontsize=12)
        ax.set_ylabel("Horas de Estudio", fontsize=12)
        ax.grid(axis='y', linestyle='--', alpha=0.7)

        # Mostrar el gr√°fico en Streamlit
        st.pyplot(fig)
        st.markdown(
            """
            Los estudiantes sin internet que reciben apoyo escolar tienden a tener un rango m√°s amplio y una mediana ligeramente superior de horas de estudio, lo que sugiere que este apoyo fomenta mejores h√°bitos de estudio. En cambio, quienes no tienen apoyo escolar muestran una mediana m√°s baja, indicando menor constancia. Entre los estudiantes con acceso a internet, aquellos con apoyo escolar mantienen una mediana alta y datos m√°s consistentes, reforzando la importancia del apoyo escolar. Sin embargo, quienes no cuentan con este apoyo presentan una mayor dispersi√≥n en las horas de estudio, lo que sugiere que el acceso a internet por s√≠ solo no garantiza h√°bitos eficientes.
            """
        )
elif seleccion == "üìâ Visualizaci√≥n de correlaci√≥n":
    with st.expander("Correlaci√≥n entre horas de estudio y rendimiento acad√©mico", expanded=False):
        st.header("Correlaci√≥n entre horas de estudio y rendimiento acad√©mico")

        # Texto explicativo
        st.markdown(
            """
            En esta secci√≥n se explora la relaci√≥n entre el tiempo dedicado al estudio semanal (**studytime**) y las calificaciones en los tres periodos acad√©micos:
            **G1 (Primer Periodo)**, **G2 (Segundo Periodo)**, y **G3 (Nota Final)**. Adem√°s, se muestran las correlaciones calculadas entre estas variables.
            """
        )

        # C√°lculo de correlaciones
        correlacion_G1 = filtered_data["studytime"].corr(filtered_data["G1"])
        correlacion_G2 = filtered_data["studytime"].corr(filtered_data["G2"])
        correlacion_G3 = filtered_data["studytime"].corr(filtered_data["G3"])

        # Mostrar las correlaciones
        st.write(f"**Correlaci√≥n entre Studytime y G1:** {correlacion_G1:.2f}")
        st.write(f"**Correlaci√≥n entre Studytime y G2:** {correlacion_G2:.2f}")
        st.write(f"**Correlaci√≥n entre Studytime y G3:** {correlacion_G3:.2f}")

        # Gr√°fico: Studytime vs G1, G2, G3
        fig, axes = plt.subplots(1, 3, figsize=(18, 5), sharey=True)
        fig.suptitle("Relaci√≥n entre Horas de Estudio y Notas (G1, G2, G3)", fontsize=16)

        # Gr√°ficos individuales
        axes[0].scatter(filtered_data["studytime"], filtered_data["G1"], alpha=0.6, color="blue")
        axes[0].set_title("Studytime vs G1")
        axes[0].set_xlabel("Studytime")
        axes[0].set_ylabel("G1")

        axes[1].scatter(filtered_data["studytime"], filtered_data["G2"], alpha=0.6, color="orange")
        axes[1].set_title("Studytime vs G2")
        axes[1].set_xlabel("Studytime")

        axes[2].scatter(filtered_data["studytime"], filtered_data["G3"], alpha=0.6, color="green")
        axes[2].set_title("Studytime vs G3")
        axes[2].set_xlabel("Studytime")

        plt.tight_layout()
        st.pyplot(fig)

    with st.expander("Correlaci√≥n entre ausencias y rendimiento acad√©mico", expanded=False):
        st.header("Correlaci√≥n entre ausencias y rendimiento acad√©mico")

        # Texto explicativo
        st.markdown(
            """
            En esta secci√≥n se analiza la relaci√≥n entre el n√∫mero de ausencias (**absences**) y las calificaciones acad√©micas (**G1, G2, G3**). 
            Se incluye una l√≠nea de regresi√≥n que indica c√≥mo las ausencias afectan las calificaciones, sugiriendo una correlaci√≥n negativa.
            """
        )

        # C√°lculo de correlaciones para ausencias
        corr_absences_G1 = filtered_data["absences"].corr(filtered_data["G1"])
        corr_absences_G2 = filtered_data["absences"].corr(filtered_data["G2"])
        corr_absences_G3 = filtered_data["absences"].corr(filtered_data["G3"])

        # Mostrar las correlaciones
        st.write(f"**Correlaci√≥n entre Ausencias y G1:** {corr_absences_G1:.2f}")
        st.write(f"**Correlaci√≥n entre Ausencias y G2:** {corr_absences_G2:.2f}")
        st.write(f"**Correlaci√≥n entre Ausencias y G3:** {corr_absences_G3:.2f}")

        # Gr√°fico de regresi√≥n para G3
        fig, ax = plt.subplots(figsize=(8, 6))
        ax.scatter(filtered_data["absences"], filtered_data["G3"], alpha=0.6, color="purple", s=30, label="Datos")
        m, b = np.polyfit(filtered_data["absences"], filtered_data["G3"], 1)
        ax.plot(filtered_data["absences"], m * filtered_data["absences"] + b, color="red", label="L√≠nea de regresi√≥n")
        ax.set_title("Relaci√≥n entre Ausencias y Nota Final (G3)", fontsize=14, color="navy")
        ax.set_xlabel("N√∫mero de Ausencias", fontsize=12)
        ax.set_ylabel("Nota Final (G3)", fontsize=12)
        ax.legend()
        st.pyplot(fig)

elif seleccion == "‚úÖ Resultados":
    st.header("‚úÖ Resultados")

    # An√°lisis descriptivo
    with st.expander("üìã An√°lisis Descriptivo", expanded=False):
        st.markdown(
            """
            - Un an√°lisis estad√≠stico b√°sico revela que, en promedio, los estudiantes de ambos colegios muestran una mayor influencia en su desempe√±o acad√©mico por parte de la madre en comparaci√≥n con el padre. Este resultado sugiere que el rol materno tiene un impacto m√°s significativo en el apoyo educativo de los estudiantes.
            - Existe una gran diferencia entre las horas libres y las horas de estudio. Quiz√°s, dicha diferencia se refleja en 
              las notas escolares; puesto que la media de notas por periodo escolar no supera los 12 puntos (de los 20 puntos m√°ximos otorgables).
            """
        )

    # Visualizaci√≥n segmentada
    with st.expander("üìä Visualizaci√≥n Segmentada", expanded=False):
        st.markdown(
            """
            - Al segmentar las notas por g√©nero, se observa un mayor esfuerzo reflejado en los resultados acad√©micos de las mujeres en comparaci√≥n con los hombres.
            - Con base en la interpretaci√≥n anterior, se observa que el colegio Gabriel Pereira presenta calificaciones superiores en comparaci√≥n con el Mousinho da Silveira. Adem√°s, en ambos casos, las mujeres obtienen notas m√°s altas que los hombres, manteniendo una tendencia consistente.
            - Al realizar una separaci√≥n por edades, se observa que los j√≥venes de 19 a√±os no demuestran inter√©s respecto a sus notas a comparaci√≥n de las dem√°s edades. Sin embargo, segmentar de esta manera, muestra resultados distintos a los an√°lisis anteriores, puesto que j√≥venes hombres de 15 y 20 a√±os tienen mayores calificaciones que las mujeres.
            - Los resultados muestran que los estudiantes que no reciben apoyo educativo formal tienden a obtener mejores calificaciones. Esto podr√≠a explicarse por el hecho de que, en ausencia de apoyo escolar, muchos de ellos cuentan con apoyo familiar, lo que influye positivamente en su desempe√±o acad√©mico. Adem√°s, se evidencia que aquellos estudiantes que recurren al conocimiento disponible en internet tambi√©n logran mejorar sus calificaciones, lo que sugiere que las fuentes alternativas de aprendizaje pueden complementar eficazmente su formaci√≥n.
            - Los resultados indican que los estudiantes sin acceso a internet que reciben apoyo escolar tienden a dedicar un rango m√°s amplio de horas al estudio, con una mediana ligeramente superior, lo que sugiere que el apoyo escolar contribuye a fomentar mejores h√°bitos de estudio. Por el contrario, aquellos que no cuentan con dicho apoyo presentan una mediana m√°s baja en sus horas de estudio, lo que refleja una menor constancia en sus h√°bitos acad√©micos.
            """
        )
        # Expander para Resultados de las Correlaciones
    with st.expander("üîó Resultados de las Correlaciones", expanded=False):
        st.markdown(
            """
            ### Correlaci√≥n entre Faltas de asistencia y Notas
            - Los resultados muestran que, para la variable **absences**, los estudiantes con pocas ausencias (entre 0 y 10) tienden a obtener calificaciones m√°s altas en **G3**, generalmente por encima de 7.5. 
            - Adem√°s, se observa una correlaci√≥n negativa entre las ausencias y las notas finales: a medida que aumenta el n√∫mero de ausencias, las calificaciones tienden a disminuir.

            ### Correlaci√≥n entre Apoyo escolar y Notas
            - Los resultados muestran que los estudiantes que no reciben apoyo escolar (**schoolsup = no**) tienen un rendimiento ligeramente superior en la nota final (**G3**) en comparaci√≥n con aquellos que s√≠ reciben apoyo. 
            - Aunque las diferencias en los promedios son peque√±as, la mediana es m√°s alta en el grupo sin apoyo escolar. Esto podr√≠a deberse a que los estudiantes que requieren apoyo suelen enfrentarse a dificultades acad√©micas previas, mientras que quienes no lo necesitan podr√≠an tener una base acad√©mica m√°s s√≥lida.
            - Por otro lado, los estudiantes que reciben apoyo familiar (**famsup = yes**) presentan un rendimiento en **G3** ligeramente superior al de aquellos que no cuentan con este respaldo. Sin embargo, las diferencias en las calificaciones finales entre ambos grupos son m√≠nimas. Esto indica que, aunque el apoyo familiar podr√≠a ser un factor motivador, su influencia en el rendimiento acad√©mico es limitada, y variables como los h√°bitos de estudio (**studytime**) o la asistencia (**absences**) podr√≠an tener un impacto m√°s significativo en las notas.
            """
    )


elif seleccion == "üßê Conclusiones":
    st.header("üßê Conclusiones")
    st.markdown(
        """
        <div style="text-align: justify;">
            Los resultados reflejan que el apoyo escolar no siempre se traduce en mejores calificaciones, ya que los estudiantes sin este tipo de asistencia tienden a obtener notas finales ligeramente superiores. Esto podr√≠a deberse a que quienes no requieren apoyo suelen tener bases acad√©micas m√°s s√≥lidas, mientras que los que lo reciben enfrentan mayores desaf√≠os previos. Sin embargo, el apoyo escolar fomenta mejores h√°bitos de estudio, especialmente en estudiantes sin acceso a internet. El apoyo familiar tiene un impacto positivo moderado en el rendimiento acad√©mico, aunque las diferencias en las notas finales entre quienes lo reciben y quienes no son peque√±as. Factores como los h√°bitos de estudio y la asistencia parecen ser m√°s determinantes en los resultados escolares.
        <div style="text-align: justify;">
            Finalmente, el acceso a internet no garantiza un mejor rendimiento acad√©mico, aunque s√≠ puede contribuir a reducir la dispersi√≥n en las calificaciones. Su impacto es mayor cuando se combina con apoyo escolar, ya que permite mantener h√°bitos de estudio consistentes. Sin embargo, su ausencia fomenta una mayor dependencia de estrategias alternativas, como el apoyo familiar, para lograr buenos resultados.
        <div style="text-align: justify;">
            La correlaci√≥n negativa entre las ausencias y las calificaciones finales indica que la asistencia regular es un factor clave en el rendimiento acad√©mico. Los estudiantes con menos de 10 ausencias logran notas superiores a 7.5, mientras que un mayor n√∫mero de ausencias afecta negativamente las calificaciones, evidenciando la importancia de la constancia en el aula. En cuanto al apoyo, los estudiantes sin apoyo escolar tienden a tener un rendimiento ligeramente mejor, probablemente por contar con bases acad√©micas m√°s s√≥lidas. Por otro lado, el apoyo familiar tiene un impacto positivo moderado en las notas, aunque es limitado. Factores como la asistencia y los h√°bitos de estudio parecen ser m√°s determinantes para el desempe√±o acad√©mico que el tipo de apoyo recibido.
        """,
        unsafe_allow_html=True
    )

# Secci√≥n de Cr√©ditos
st.sidebar.markdown("### Cr√©ditos:")
st.sidebar.markdown("""
- **Brandon Mart√≠nez Moncada**  
- **Alejandra Castillo Mar√≠n**  
- **Mateo Gutierrez Roa**  
- **Eddie Santiago Ramos**  

**Materia:** Toma de decisiones 1  
**Docente:** Diego Fernando Avila Iba√±ez
**Universidad:** Sergio Arboleda
""")
st.sidebar.markdown("**Fuente de datos:** [UCI Machine Learning Repository](https://archive.ics.uci.edu/dataset/320/student+performance)")
# Informaci√≥n adicional
st.sidebar.info("üí° Desarrollado con Streamlit para visualizar y analizar datos educativos.")
